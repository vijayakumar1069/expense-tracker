
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @default(cuid())

  email     String     @unique
  password  String
  role       Role       @default(USER)
sessions        Session[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  expenses  Expense[]
}

model Session {
  id        String   @id
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  expiresAt DateTime
  createdAt DateTime @default(now())

  @@index([userId])
}

model Expense {
  id              String         @id @unique @default(cuid())
  name            String
  description     String?
  amount          Float
  tax            Int?
  total          Float
  date           DateTime
  user           User           @relation(fields: [userId], references: [id])
  userId         String
  paymentMethod  PaymentMethod?  // Optional because PaymentMethod will be created after Expense
  attachment   Attachment[]
  category       String

  @@index([userId])
}
model Attachment {
  id        String     @id @default(cuid())
  url       String
  expense   Expense    @relation(fields: [expenseId], references: [id])
  expenseId String    @unique
}
enum PaymentMethodType {
  CASH
  BANK
  CHEQUE
}

enum Role { 
  USER
  ADMIN
}
model PaymentMethod {
  id             String           @id @default(cuid())
  name           String
  type           PaymentMethodType
  receivedBy     String?         // For BANK payments
  bankName       String?         // For BANK payments
  chequeNo       String?         // For CHEQUE payments
  chequeDate     DateTime?       // For CHEQUE payments
  expense        Expense         @relation(fields: [expenseId], references: [id])
  expenseId      String          @unique
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt


  @@index([type])
}

